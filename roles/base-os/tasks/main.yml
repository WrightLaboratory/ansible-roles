---
# tasks file for base-os
- name: set hostname to inventory fqdn
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"
    use: systemd
  when: not inventory_hostname|regex_search('^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$')

- name: get almalinux version
  ansible.builtin.shell:
    cmd: grep -e "^VERSION_ID=" /etc/os-release | cut -d= -f2 | tr -d "\""
  changed_when: false
  register: almalinux_version

- name: check dnf packages to upgrade
  ansible.builtin.dnf:
    list: updates
  register: packages

- name: number of packgages to update
  ansible.builtin.debug:
    msg: "Total number of packages to upgdate: {{ packages.results|length }}"

- name: upgrade os
  block:
  - name: display updates to be installed
    ansible.builtin.debug:
      msg: >-
        {%- set output=[] -%}
        {%- for p in packages.results -%}
        {{ output.append('%-40s' % (p.name ~ '-' ~ p.version) ~ ' | repo: ' ~ p.repo) }}
        {%- endfor -%}
        {{ output }}
  - name: upgrade almalinux release
    ansible.builtin.command:
      cmd: dnf -y upgrade almalinux-release
    when: almalinux_version.stdout is version("8.7", '<=')
  - name: upgrade all packages
    ansible.builtin.package:
      name: "*"
      state: latest
    register: result
    retries: 5
    until: result is success
  - name: install base os packages
    ansible.builtin.package:
      name:
      - python3.11
      - python3.11-pip
      - python3.11-cryptography
      - podman
      - bash-completion
      - python3-libselinux
      - policycoreutils-python-utils
  - name: reboot
    ansible.builtin.reboot:
      reboot_timeout: 1200
  - name: wait for system readiness
    ansible.builtin.wait_for_connection:
  when: packages.results|length  > 0
