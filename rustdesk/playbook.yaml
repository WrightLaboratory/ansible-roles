---
- name: setup rustdesk relay and server
  hosts: rustdesk
  become: true

  tasks:
  - name: get almalinux version
    ansible.builtin.shell:
      cmd: grep -e "^VERSION_ID=" /etc/os-release | cut -d= -f2 | tr -d "\""
    changed_when: false
    register: almalinux_version

  - name: upgrade almalinux release
    ansible.builtin.command:
      cmd: dnf -y upgrade almalinux-release
    when: almalinux_version.stdout is version("8.7", '<=')

  - name: upgrade all packages
    ansible.builtin.package:
      name: "*"
      state: latest
    register: result
    retries: 5
    until: result is success

  - name: install packages
    ansible.builtin.package:
      name:
      - podman
      - python3-cryptography
      - bash-completion
      - python3-libselinux
      - policycoreutils-python-utils

  - name: create user
    ansible.builtin.user:
      name: "{{ vars.service_name }}"
      uid: "{{ vars.service_uid | int }}"
      system: true
      home: "/var/lib/{{ vars.service_name }}"
      shell: /bin/false

  - name: create local data directory for user
    ansible.builtin.file:
      state: directory
      path: "/var/lib/{{ vars.service_name }}/data"
      owner: "{{ vars.service_name }}"
      group: "{{ vars.service_name }}"
      mode: 755

  - name: set SELinux contexts for user directories
    block:
    - name:
      community.general.sefcontext:
        target: "/var/lib/{{ vars.service_name }}(/.+)?"
        setype: user_home_dir_t
        state: present
    - name:
      community.general.sefcontext:
        target: "/var/lib/{{ vars.service_name }}/data(/.+)?"
        setype: container_file_t
        state: present
    - name:
      ansible.builtin.command: 
        argv:
        - restorecon
        - -irv
        - /var/lib/{{ vars.service_name }}
      changed_when: false

  - name: ensure lingering enabled
    ansible.builtin.command:
      argv:
      - loginctl
      - enable-linger
      - "{{ vars.service_name }}"
      creates: /var/lib/systemd/linger/{{ vars.service_name }}
