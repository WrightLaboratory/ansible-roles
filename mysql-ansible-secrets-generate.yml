---
- hosts: localhost

  tasks:
  - name: check for existence of ~/.ansible/mysql-secrets.yml
    ansible.builtin.stat:
      path: ~/.ansible/mysql-secrets.yml
    register: secrets_file

  - name: check for existence of ~/.ansible/vaultpassword
    ansible.builtin.stat:
      path: ~/.ansible/vaultpassword
    register: password_file

  - name: create secret file
    block:
    - name: create random string and save it in mysql_root_password
      ansible.builtin.set_fact:
        mysql_root_password: "{{ lookup('community.general.random_string', special=true, override_special='_-#+*', length=20, min_special=1, ignore_similar_chars=true) }}"
      no_log: true
    - name: display mysql root password
      ansible.builtin.debug:
        msg: "mysql_root_password: {{ mysql_root_password }}"
    - name: create random string and save it in mysql_password
      ansible.builtin.set_fact:
        mysql_password: "{{ lookup('community.general.random_string', special=true, override_special='_-#+*', length=20, min_special=1, ignore_similar_chars=true) }}"
      no_log: true
    - name: display mysql password
      ansible.builtin.debug:
        msg: "mysql_root_password: {{ mysql_password }}"

    - name: create mysql secrets variable file in ~/.ansible on control node
      ansible.builtin.template:
        src: mysql-ansible-secrets.yml.j2
        dest: ~/.ansible/mysql-secrets.yml
        mode: '0600'
    when: not secrets_file.stat.exists

  - name: create default ansible vault password file (~/.ansible/vaultpassword) with correct permissons
    ansible.builtin.copy:
      dest: ~/.ansible/vaultpassword
      mode: '0600'
      content: |
        ***IMPORTANT***: Replace the contents of this line (no newline) with your ansible vault password in plaintext
    when: not password_file.stat.exists
